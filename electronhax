#!/bin/bash

ELECTRON_HAX_DIR="${XDG_RUNTIME_DIR:-/run/user/$UID}/electronhax"

usage() {
    cat <<EOF
Usage:
  electronhax init <cmd>
      Should only be called by Steam with "electronhax init %COMMAND%"
  electronhax ls
      Lists all currently running games
  electronhax run <appid> <cmd>
      Runs <cmd> in the context of <appid> with proton
EOF
}

# --- Handle "init" before strict mode ---
if [[ "$1" == "init" ]]; then
    shift
    appid="${SteamAppId:?SteamAppId not set}"
    mkdir -p "$ELECTRON_HAX_DIR/$appid"

    # Join all arguments into a single string
    full_cmdline="$*"

    # Extract the first occurrence of /proton (with optional suffix)
    proton_path=$(echo "$full_cmdline" | grep -oE '/[^ ]*/proton[^ ]*' | head -n1)

    echo "$proton_path" > "$ELECTRON_HAX_DIR/$appid/exe"
    echo "$STEAM_COMPAT_DATA_PATH/pfx" > "$ELECTRON_HAX_DIR/$appid/pfx"
    declare -px > "$ELECTRON_HAX_DIR/$appid/env"
    exec "$@"
fi

set -euo pipefail

cmd_ls() {
    [[ -d "$ELECTRON_HAX_DIR" ]] && ls -1 "$ELECTRON_HAX_DIR"
}

cmd_run() {
    local appid="$1"; shift
    [[ -d "$ELECTRON_HAX_DIR/$appid" ]] || { echo "No app running with appid: $appid"; exit 2; }
    source "$ELECTRON_HAX_DIR/$appid/env"
    [[ $# -ge 1 ]] || { usage; exit 1; }

    local exe
    exe="$(cat "$ELECTRON_HAX_DIR/$appid/exe" | awk '{print $1}')"
    if [[ -z "$exe" ]]; then
        echo "Error: Could not determine Proton executable for appid $appid."
        exit 3
    fi
    exec "$exe" run "$@"
}

main() {
    [[ $# -ge 1 ]] || { usage; exit 1; }
    local cmd="$1"; shift
    case "$cmd" in
        ls) cmd_ls ;;
        run) [[ $# -ge 2 ]] || { usage; exit 1; }; cmd_run "$@" ;;
        *) printf "Unknown command %s\n" "$cmd"; usage; exit 1 ;;
    esac
}

main "$@"